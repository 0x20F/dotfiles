#!/usr/bin/env bash

# Follow in the steps of mighty barbarossa
# Cleanup to ensure each field is on a separate line
appname=$(echo "$1" | sed '/^$/d')
summary=$(echo "$2" | sed '/^$/d' | xargs)
body=$(echo "$3" | sed '/^$/d' | xargs)
icon=$(echo "$4" | sed '/^$/d')
urgency=$(echo "$5" | sed '/^$/d')
timestamp=$(date +"%I:%M %p") # For now


# Check if app is blacklisted
case "$appname" in
	'changeVolume'|'changeBrightness'|'sxhkd'|'bspwm')
		# Don't add notification
		exit
		;;

	'Spotify')
		# Spotify doesn't send an actual path to their icon so
		# we need to retrieve it
		random_name=$(mktemp --suffix ".png")
		# Get the thumbnail url from the player metadata
		artlink=$(playerctl metadata mpris:artUrl | sed -e 's/open.spotify.com/i.scdn.co/g')

		# Download the image
		curl -s "$artlink" -o "$random_name"
		icon=$random_name
		;;
esac



log_file=$(ix -f logs.dunst)

# If the log file isn't there, create it
if [ ! -f $log_file ]; then
	echo "FILE DOESNT EXIST"
	echo '{ "notifications": [] }' > $log_file
fi



# Build a new JSON object for the notification
json=$(
	jq -n \
		--arg an "$appname" \
		--arg sy "$summary" \
		--arg by "$body" \
		--arg ic "$icon" \
		--arg uy "$urgency" \
		--arg ts "$timestamp" \
		'{appname:$an, summary:$sy, body:$by, icon:$ic, urgency:$uy, timestamp:$ts}'
)


# Temporary file to write the new contents to
swap="/tmp/${RANDOM}.tmp"

# Prepend the new JSON object to the existing array
jq ".notifications |= [$json] + ." $log_file > $swap
mv $swap $log_file

